class Solution {
    public Node connect(Node root) {
        
        if(root == null) return null;
        
        Node curr = root; //1st
        
        while(curr.left != null){ 
            
            Node nextLevel = curr.left; //2nd
            
            while(curr != null){ //3rd
                curr.left.next = curr.right; //4th
                if(curr.next == null){ //5th
                    curr.right.next = null; //6th
                }
                else{
                    curr.right.next = curr.next.left; //7th
                }
                curr = curr.next; //8th
            }
            curr = nextLevel; //9th
        }
        return root;
    }
}

Example : root = [1,2,3,4,5,6,7]
        1
     2     3
   4  5   6  7      
Output: [1,#,2,3,#,4,5,6,7,#]
1st : 1
2nd : nextLevel = 2
3rd : curr = 1 != null
4th : curr.left.next (2 ->) = curr.right (3)
5th : curr.next == null (1 -> == null)
6th : curr.right.next = null (3 -> == null) *for first iteration
7th : curr.right.next = curr.next.left *for second iteration
      *curr = 2
      *curr.right = 5
      *curr.next = 3
      *after 5 is 6
8th : curr.next = null (1 -> null), break inner while loop
9th : curr = 2
